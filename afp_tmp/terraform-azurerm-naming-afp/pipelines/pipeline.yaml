name: "module validate and publish al-test-module5"

parameters:
  - name: enableUnitTests
    type: boolean
    default: true
    values:
      - true
      - false

variables:
  - name: system.debug
    value: true
  - name: moduleName
    value: $(Build.Repository.Name)
  - name: modulePath
    value: $(System.DefaultWorkingDirectory)
  - name: workingDirectory
    value: "self" #$(System.DefaultWorkingDirectory)
  # - template: /code/pipeline/AzureDevOps/instanceVariables.yml@control
  #   parameters:
  #     instanceName: moduleTesting
  - template: .pipelines/.settings.yml@management

trigger:
  branches:
    include:
      - feature/*
      - main
  paths:
    exclude:
      - docs
      - README.md

resources:
  repositories:
    # - repository: control
    #   type: git
    #   name: ec.platform/ec.control
    #   ref: refs/heads/main

    - repository: management
      type: git
      name: EL23-Management/management
      ref: refs/heads/main

stages:
  - stage: Validate
    displayName: Validate
    jobs:
      # - template: /code/pipeline/AzureDevOps/job.pester.yml@control
      # - template: /code/pipeline/AzureDevOps/job.tfdocs.yml@control
      # - template: /code/pipeline/AzureDevOps/tf_unit_testing.yml@control
      - template: .pipelines/templates/job.pester.yml@management
      - template: .pipelines/templates/job.tfdocs.yml@management
      - template: .pipelines/templates/job.tf_unit_testing.yml@management
        parameters:
          terraformVersion: $(terraformVersion)
          ${{ eq('${{parameters.enableUnitTests}}', 'false') }}:
            condition: false

  - stage: Publish
    displayName: Publish
    jobs:
      # - template: /code/pipeline/AzureDevOps/tf_publish.yml@control
      - template: .pipelines/templates/job.tf_publish.yml@management
        # parameters:
        #   versionType: ${{ parameters.versionType }}
