Describe "Terraform content" -Tag "config", "template" {

    BeforeAll {
        Import-Module  (Join-Path $PSScriptRoot "..\..\cli\src\EcpModule.psm1") -Force
        #TF DOCS JSON SUmmary
        $thisTFOutline = Invoke-TfDocs -tempDirectory $ENV:TEMP -os $ENV:OS -outputType json | ConvertFrom-Json -Depth 20
    }

    Context "Inputs & Outputs" {

        It "Has mandatory input [<_>] in variables.tf" -ForEach @(
            "node_config"
            "stage_specific_config"
            "tfbackend_storage_account_id"
        ) {
            $thisTFOutline.inputs.name | Should -Contain $_ -Because "this value is a mandatory ECP input"
        }

        It "Has mandatory output [<_>] in outputs.tf" -ForEach @(
            "infra_as_code"
            "node_type"
            "node_name"
            "node_location"
            "node_uri"
            "component_type"
            "component_name"
        ) {
            $thisTFOutline.outputs.name | Should -Contain $_ -Because "this value is a mandatory ECP output"
        }

        It "Does not direct call restricted resource type [<type>] from provider [<provider>]" -ForEach @(
            @{
                provider = "azurerm"
                type     = "role_assignment"
            },
            @{
                provider = "azurerm"
                type     = "application_gateway"
            },
            @{
                provider = "azurerm"
                type     = "frontdoor"
            },
            @{
                provider = "azurerm"
                type     = "frontdoor_firewall_policy"
            },
            @{
                provider = "azurerm"
                type     = "web_application_firewall_policy"
            },
            @{
                provider = "azurerm"
                type     = "public_ip"
            },
            @{
                provider = "azurerm"
                type     = "traffic_manager_profile"
            }

        ) {
            $thisTFOutline.resources | Where-Object { $_.provider -eq $provider } | Where-Object { $_.type -eq $type } | Should -HaveCount 0 -Because "this is a restricted resource type that must only be deployed from within authorised modules"
        }

    }

    Context "Versions" {

        It "Uses minimum version [<minVersion>] for module [<moduleName>]" -ForEach @(
            @{
                moduleName = "tf_azr_ecp_about_this"
                minVersion = "1.3.0"
            },
            @{
                moduleName = "tf_azr_ecp_remote_state"
                minVersion = "1.1.1"
            }
        ) {
            $matchingModules = $thisTFOutline.modules | Where-Object { $_.source -match "$($moduleName)$" }
            ForEach ($module in $matchingModules) {
                [array]$lessThanMin += [version]$module.version -lt [version]$minVersion ? "name = $($module.name) source = $($module.source) version = $($module.version)" : $null
            }
            $lessThanMin | Should -BeNullOrEmpty -Because "version [$minVersion] of module [$moduleName] is the minimum required by ECP"
        }

    }

}