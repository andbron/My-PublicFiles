Describe "Stage" -Tag "config" {

    Context "Configuration" {

        # workaround for data driven code block outside It which won't respect Tag
        $dirChar = "\$([IO.Path]::DirectorySeparatorChar)"
        if ($pwd -match "$($dirChar).*$($dirChar).*$($dirChar)cores") {
            Import-Module  (Join-Path $PSScriptRoot "..\..\cli\src\EcpModule.psm1") -Force
            $node = Get-EcpNodeFromPath
            $stages = (Get-Content $node.stagesPath | ConvertFrom-Json).stageObjectList
        }

        It "Has a stage specific configuration file for each stage .json" -ForEach $stages.name {
            "$($_).json" | Should -Exist -Because "this file contains configuration details specific to each stage"
        }

        It "Has matching input parameters structure between stage template and stage config [<_>.json]" -ForEach $stages.name {
            $stageTemplate = Get-Content stage-template.json | ConvertFrom-Json

            $stageTemplateProperties = $stageTemplate.input_parameters `
                | Get-Member -MemberType NoteProperty `
                | Sort-Object -Property Name `
                | ForEach-Object Name

            $stageProperties = (Get-Content "$($_).json" `
                | ConvertFrom-Json -ErrorAction SilentlyContinue).input_parameters `
                | Get-Member -MemberType NoteProperty `
                | Sort-Object -Property Name `
                | ForEach-Object Name

            $stageProperties | Should -Be $stageTemplateProperties -Because "consistency is required between stage-template.json file and stage specific json files in order to ensure all stages have mathcing structure and that new stages are created with the correct strucutre"
        }

        # Naming convention of stage specific files?

    }

}